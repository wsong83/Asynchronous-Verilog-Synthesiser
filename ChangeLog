##### Sun 10/06/2012
* Fix the on-load error. The problem is fake and it should not stop the elaboration from proceeding further.

##### Sat 09/06/2012
* Add a function named multi_driver_checker() in netlist::Variable to handle the multi-driver check. However, this is far from 
  perfect. Different range selections in different always blocks will cause false alarms. This must be fixed, which means the 
  check should be run after generation blocks are unfolded.
* Add a set_always_pointer() member function to all NetComp classes. It is used to set the pointer to its father 
  netlist::SeqBlock, which will be used for multi-driver check.
* Able to add new modules to the elaboration list automatically.

##### Fri 08/06/2012
* Rewrite update_name() in Module to calculate_name(). Now it is a const function without any side effect in the module.

##### Thu 07/06/2012
* Fix the no-load problem.
* Fix the multiple driver problem, which is caused by uninitilised port directions in instances.
* Add update_ports() in Netlist::Instance to update the ports directions before db_register() in Netlist::Module::elaborate().
* Add find_port() in Netlist::Module.

##### Wed 06/06/2012
* Start to elaborate wires and registers. Have no-driver and multiple-driver bugs so far.
* Store the elaborated modules to the target work library and update the current_design if elaborate successfully.
* Fix the bug in reducing range expressions.
* Fix a bug in the deep_copy() of netlist::Port. As VIdentifier has range definitions inside, it needs to be deep_copied.
* Add a avs_shell command "report_netlist" to show the internals of a module or internal item.
* Show constant numbers in a range expression in the form of plain decimal number instead of fix-width number.
